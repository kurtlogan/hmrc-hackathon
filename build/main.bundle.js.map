{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/speech-to-text/onend.js","webpack:///./src/speech-to-text/onerror.js","webpack:///./src/speech-to-text/onresult.js","webpack:///./src/speech-to-text/onstart.js","webpack:///./src/speech-to-text/controls.js","webpack:///./src/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","element","event","interim","resultIndex","results","length","transcript","startSpeechText","recog","webkitSpeechRecognition","continuous","interimResults","onstart","_onstart2","default","onerror","_onerror2","onresult","_onresult2","onend","_onend2","lang","start","stopSpeechText","stop","_controls","window","onload","webgazer","Error","begin","document","querySelector","onclick","alert","speechToTextElements","querySelectorAll","console","log","_loop","onfocus","onblur"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAjB,GACAY,OAAAC,eAAAb,EAAA,cAAiDkB,OAAA,KAIjDpB,EAAAqB,EAAA,SAAAlB,GACA,IAAAS,EAAAT,KAAAmB,WACA,WAA2B,OAAAnB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAU,EAAAC,GAAsD,OAAAV,OAAAW,UAAAC,eAAAnB,KAAAgB,EAAAC,IAGtDxB,EAAA2B,EAAA,GAIA3B,IAAA4B,EAAA,6FCnEe,SAACC,GAAD,OAAa,uGCAb,SAACA,GAAD,OAAa,uGCAb,SAACA,GAAD,OAAa,SAACC,GAG3B,IAFA,IAAIC,EAAU,GAEN3B,EAAI0B,EAAME,YAAa5B,EAAI0B,EAAMG,QAAQC,SAAU9B,EACzD2B,GAAWD,EAAMG,QAAQ7B,GAAG,GAAG+B,WAGjCN,EAAQT,MAAQW,6FCPH,SAACF,GAAD,OAAa,uICA5B,QAAA7B,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,yDAoBSoC,gBAlBa,SAACP,GACrB,IAAIQ,EAAQ,IAAIC,wBAChBD,EAAME,YAAa,EACnBF,EAAMG,gBAAiB,EAEvBH,EAAMI,SAAU,EAAAC,EAAAC,SAAQd,GACxBQ,EAAMO,SAAU,EAAAC,EAAAF,SAAQd,GACxBQ,EAAMS,UAAW,EAAAC,EAAAJ,SAASd,GAC1BQ,EAAMW,OAAQ,EAAAC,EAAAN,SAAMd,GAEpBQ,EAAMa,KAAO,QACbb,EAAMc,WAOkBC,eAJL,SAACf,GACpBA,EAAMgB,sCCpBR,IAAAC,EAAAtD,EAAA,GAEAuD,OAAOC,OAAS,WACd,QAA+B,IAArBD,OAAOE,SACf,MAAM,IAAIC,MAAM,uBAGlBD,SAASE,QAETC,SAASC,cAAc,WAAWC,QAAU,kBAAMC,MAAM,SAKxD,IAAIC,EAAuBJ,SAASK,iBAAiB,gCACrDC,QAAQC,IAAIH,GACZ,IAdoB,IAAAI,EAAA,SAcXhE,GACP,IAAIyB,EAAUmC,EAAqB5D,GACnC8D,QAAQC,IAAItC,GACZA,EAAQwC,QAAU,WAChB,IAAIhC,GAAQ,EAAAiB,EAAAlB,iBAAgBP,GAC5BA,EAAQyC,OAAS,kBAAM,EAAAhB,EAAAF,gBAAef,MALjCjC,EAAI,EAAGA,EAAI4D,EAAqB9B,OAAQ9B,IAAKgE,EAA7ChE","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","export default (element) => () => {}\n","export default (element) => () => {}\n","export default (element) => (event) => {\n  var interim = '';\n\n  for(var i = event.resultIndex; i < event.results.length; ++i) {\n    interim += event.results[i][0].transcript;\n  }\n\n  element.value = interim;\n}\n","export default (element) => () => {}\n","import onstart from './onstart'\nimport onresult from './onresult'\nimport onerror from './onerror'\nimport onend from './onend'\n\nlet startSpeechText = (element) => {\n  var recog = new webkitSpeechRecognition();\n  recog.continuous = false;\n  recog.interimResults = true;\n\n  recog.onstart = onstart(element);\n  recog.onerror = onerror(element);\n  recog.onresult = onresult(element);\n  recog.onend = onend(element);\n\n  recog.lang = \"en-GB\";\n  recog.start();\n}\n\nlet stopSpeechText = (recog) => {\n  recog.stop();\n}\n\nexport { startSpeechText, stopSpeechText }\n","import {startSpeechText, stopSpeechText} from './speech-to-text/controls'\n\nwindow.onload = () => {\n  if(typeof(window.webgazer) === 'undefined') {\n    throw new Error(\"webgazer not found!\");\n  }\n\n  webgazer.begin();\n\n  document.querySelector(\"#button\").onclick = () => alert(\"here\");\n\n  /*\n   * Bind speech to text to all elements on page load\n   */\n  var speechToTextElements = document.querySelectorAll(\"input[type='text'], textarea\");\n  console.log(speechToTextElements)\n  for (let i = 0; i < speechToTextElements.length; i++) {\n    let element = speechToTextElements[i];\n    console.log(element)\n    element.onfocus = () => {\n      let recog = startSpeechText(element);\n      element.onblur = () => stopSpeechText(recog);\n    }\n  }\n}\n"],"sourceRoot":""}